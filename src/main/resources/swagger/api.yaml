swagger: "2.0"
info:
  description: "Learning Plattfom with movie subtitles"
  version: "1.0.0"
  title: "Learning Subtitles"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "projekte@frittenburger.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "learn.frittenburger.de"
basePath: "/v1"
tags:
- name: "dataset"
  description: "datasets for learning language"
- name: "database"
  description: "user database"
- name: "bucket"
  description: "manage buckets"
- name: "composer"
  description: "Composer engine" 
  
schemes:
- "https"
- "http"

paths:
  /datasets:
    get:
      tags:
      - "dataset"
      summary: "get list of dataset metadata"
      description: ""
      operationId: "getDatasets"
      produces:
      - "application/json"
      responses:
        201:
          description: "list of available datasets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BucketMetadata"
        400:
          description: "Invalid status value"

  /dataset/{bucketId}:
    get:
      tags:
      - "dataset"
      summary: "get dataset"
      description: ""
      operationId: "getDataset"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        200:
          description: Ok
          schema:
            type: file
        405:
          description: Invalid input    
          
  /dataset/{bucketId}/{filename}:
    get:
      tags:
      - "dataset"
      summary: "get list of dataset metadata"
      description: ""
      operationId: "getFile"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      - name: "filename"
        in: "path"
        description: "filename"
        required: true
        type: "string"        
      responses:
        200:
          description: Ok
          schema:
            type: file
        405:
          description: Invalid input  
          
  /buckets:
    get:
      tags:
      - "bucket"
      summary: "get list of buckets metadata"
      description: ""
      operationId: "getBuckets"
      produces:
      - "application/json"
      responses:
        201:
          description: "list of bucket"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bucket"
        400:
          description: "Invalid status value"
          
  /buckets/{bucketId}/upload:
    post:
      tags:
      - "bucket"
      summary: "uploads an file"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
    
  /buckets/{bucketId}/data:
    put:
      tags:
      - "bucket"
      summary: "upload metadata"
      description: ""
      operationId: "uploadData"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      - in: "body"
        name: "bucket"
        description: "Bucket"
        required: true
        schema:
          $ref: "#/definitions/BucketData"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Bucket not found"
        405:
          description: "Validation exception"

  /buckets/{bucketId}/delete/{filename}:
    get:
      tags:
      - "bucket"
      summary: "delete an file"
      description: ""
      operationId: "deleteFile"
      produces:
      - "application/json"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      - name: "filename"
        in: "path"
        description: "name of file"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
  
  
  
  /composer:
    get:
      tags:
      - "composer"
      summary: "get list of running jobs"
      description: ""
      operationId: "getJobs"
      produces:
      - "application/json"
      responses:
        201:
          description: "list of bucket"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Job"
        400:
          description: "Invalid status value"
          
  /composer/{bucketId}/generate/{artefact}:
    get:
      tags:
      - "composer"
      summary: "generate artefact"
      description: ""
      operationId: "generate"
      produces:
      - "application/json"
      parameters:
      - name: "bucketId"
        in: "path"
        description: "ID of bucket"
        required: true
        type: "string"
      - name: "artefact"
        in: "path"
        description: "artefact"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"
          
  /database/{key}:
    get:
      tags:
      - "database"
      summary: "get data fir user"
      description: ""
      operationId: "readUserData"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "Datakey"
        required: true
        type: "string"
      responses:
        201:
          description: "data"
          schema:
            type: object
        400:
          description: "Invalid status value"  
    put:
      tags:
      - "database"
      summary: "write User Data"
      description: ""
      operationId: "writeUserData"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "Data key"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Data"
        required: true
        schema:
          type: object
      responses:
        201:
          description: "data"
          schema:
            type: object
        400:
          description: "Invalid ID supplied"
        404:
          description: "Bucket not found"
        405:
          description: "Validation exception"
  

definitions:
  Bucket:
    type: "object"
    properties:
      id:
        type: string
      name:
        type: string
      files:
        type: array
        items: 
          type: string

  
  BucketMetadata:
    type: "object"
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string   
      image:
        type: string 
      count:
        type: integer
        format: int32
      languages:
        type: array
        items:
          type: string
        
  BucketData:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
  
  Job:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      bucketId:
        type: string
      state:
        type: string
      duration:
        type: integer
        format: int64


        